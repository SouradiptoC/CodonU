:py:mod:`CodonU.correspondence_analysis`
========================================

.. py:module:: CodonU.correspondence_analysis


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   build_contingency_table_aa_count/index.rst
   build_contingency_table_codon_count/index.rst
   build_contingency_table_codon_rscu/index.rst
   ca_aa/index.rst
   ca_codon/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   CodonU.correspondence_analysis.build_contingency_table_codon_count
   CodonU.correspondence_analysis.build_contingency_table_codon_rscu
   CodonU.correspondence_analysis.build_contingency_table_aa_count
   CodonU.correspondence_analysis.ca_codon
   CodonU.correspondence_analysis.ca_aa



.. py:function:: build_contingency_table_codon_count(handle: str, genetic_table_num: int, min_len_threshold: int = 200, save_file: bool = False, file_name: str = 'contingency_codon_count', folder_path: str = 'Report') -> pandas.DataFrame

   Creates the contingency table of codon frequency

   **Note** Gene descriptions are index headings and codons are column headings

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene
   :param save_file: Option for saving the values in xlsx format (Optional)
   :param file_name: Intended file name (Optional)
   :param folder_path: Folder path where image should be saved (optional)
   :return: The contingency table as a pandas DataFrame object


.. py:function:: build_contingency_table_codon_rscu(handle: str, genetic_table_num: int, min_len_threshold: int = 200, save_file: bool = False, file_name: str = 'contingency_codon_rscu', folder_path: str = 'Report') -> pandas.DataFrame

   Creates the contingency table of codon RSCU

   **Note** Gene descriptions are index headings and codons are column headings

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene
   :param save_file: Option for saving the values in xlsx format (Optional)
   :param file_name: Intended file name (Optional)
   :param folder_path: Folder path where image should be saved (optional)
   :return: The contingency table as a pandas DataFrame object


.. py:function:: build_contingency_table_aa_count(handle: str, genetic_table_num: int, min_len_threshold: int = 66, save_file: bool = False, file_name: str = 'contingency_amino_count', folder_path: str = 'Report') -> pandas.DataFrame

   Creates the contingency table of codon frequency

   **Note**
       * Protein sequences must have one letter amino acid codes
       * gene descriptions are index headings and aminoacids are column headings

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of protein sequence to be considered as gene
   :param save_file: Option for saving the values in xlsx format (Optional)
   :param file_name: Intended file name (Optional)
   :param folder_path: Folder path where image should be saved (optional)
   :return: The contingency table as a pandas DataFrame object


.. py:function:: ca_codon(contingency_table: pandas.DataFrame, n_components: int = 59, single_syn_codons: Optional[list[str]] = None, save_file: bool = False, file_name: str = 'CA_codon', folder_path: str = 'Report') -> prince.CA

   Performs CA on codon frequency or RSCU contingency table

   **Note** Gene descriptions must be index headings and codons must column headings of the table

   :param contingency_table: The contingency table (pandas DataFrame object)
   :param n_components: Components for CA
   :param single_syn_codons: List of codons belonging to SF1
   :param save_file: Option for saving the values in xlsx format (Optional)
   :param file_name: Intended file name (Optional)
   :param folder_path: Folder path where image should be saved (optional)
   :return: The CA object


.. py:function:: ca_aa(contingency_table: pandas.DataFrame, n_components: int = 20, save_file: bool = False, file_name: str = 'CA_aa', folder_path: str = 'Report') -> prince.CA

   Performs CA on aa frequency contingency table

   **Note** Gene descriptions must be index headings and aas must column headings of the table

   :param contingency_table: The contingency table (pandas DataFrame object)
   :param n_components: Components for CA
   :param save_file: Option for saving the values in xlsx format (Optional)
   :param file_name: Intended file name (Optional)
   :param folder_path: Folder path where image should be saved (optional)
   :return: The CA object


