:py:mod:`CodonU.correspondence_analysis`
========================================

.. py:module:: CodonU.correspondence_analysis


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   mca_codon_freq/index.rst
   mca_codon_rscu/index.rst
   plot_mca_codon_freq/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   CodonU.correspondence_analysis.mca_codon_freq
   CodonU.correspondence_analysis.plot_mca_codon_freq
   CodonU.correspondence_analysis.mca_codon_rscu



.. py:function:: mca_codon_freq(handle: str, genetic_table_num: int, min_len_threshold: int = 200, n_components: int = 59) -> tuple[pandas.DataFrame, numpy.ndarray]

   Calculates the contingency table and the inertia from codon frequency of gene

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :return: The contingency table and inertia


.. py:function:: plot_mca_codon_freq(handle: str, genetic_table_num: int, min_len_threshold: int = 200, n_components: int = 59, organism_name: str | None = None, save_image: bool = False, folder_path: str = '')

   Plots the principal component analysis

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: mca_codon_rscu(handle: str, genetic_table_num: int, min_len_threshold: int = 200, n_components: int = 59) -> tuple[pandas.DataFrame, numpy.ndarray]

   Calculates the contingency table and the inertia from RSCU of every codon of every genes

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :return: The contingency table and inertia


