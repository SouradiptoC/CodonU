:py:mod:`CodonU.vizualizer`
===========================

.. py:module:: CodonU.vizualizer


Submodules
----------
.. toctree::
   :titlesonly:
   :maxdepth: 1

   plot_enc/index.rst
   plot_funcs/index.rst
   plot_mca_aa_aroma/index.rst
   plot_mca_aa_gravy/index.rst
   plot_mca_codon_freq/index.rst
   plot_mca_rscu/index.rst
   plot_neutrality/index.rst
   plot_phy_dnd/index.rst
   plot_phy_nex/index.rst
   plot_pr2/index.rst


Package Contents
----------------


Functions
~~~~~~~~~

.. autoapisummary::

   CodonU.vizualizer.plot_enc
   CodonU.vizualizer.plot_pr2
   CodonU.vizualizer.plot_neutrality
   CodonU.vizualizer.plot_mca_aa_aroma
   CodonU.vizualizer.plot_mca_aa_gravy
   CodonU.vizualizer.plot_mca_codon_freq
   CodonU.vizualizer.plot_mca_rscu
   CodonU.vizualizer.plot_phy_dnd
   CodonU.vizualizer.plot_phy_nex



.. py:function:: plot_enc(handle: str | Any, genetic_table_num: int, min_len_threshold: int = 200, organism_name: None | str = None, save_image: bool = False, folder_path: str = '', gene_analysis: bool = True)

   Plots ENc curve from given fasta file

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)
   :param gene_analysis: Option if gene analysis (True) or genome analysis (False) (optional)


.. py:function:: plot_pr2(handle: str | Any, min_len_threshold: int, organism_name: str | None = None, save_image: bool = False, folder_path: str = '', gene_analysis: bool = True)

   Plots A3/AT3 values against G3/GC3 values from given fasta file

   :param handle: Handle to the file, or the filename as a string
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)
   :param gene_analysis: Option if gene analysis (True) or genome analysis (False) (optional)


.. py:function:: plot_neutrality(handle: str | Any, min_len_threshold: int, organism_name: str | None = None, save_image: bool = False, folder_path: str = '', gene_analysis: bool = True)

   Plots neutrality plot from given fasta file

   :param handle: Handle to the file, or the filename as a string
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)
   :param gene_analysis: Option if gene analysis (True) or genome analysis (False) (optional)


.. py:function:: plot_mca_aa_aroma(handle: str, genetic_table_num: int, min_len_threshold: int = 66, n_components: int = 20, organism_name: str | None = None, save_image: bool = False, folder_path: str = '')

   Plots the principal component analysis based on amino acid frequency with aromaticity score scale

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: plot_mca_aa_gravy(handle: str, genetic_table_num: int, min_len_threshold: int = 66, n_components: int = 20, organism_name: str | None = None, save_image: bool = False, folder_path: str = '')

   Plots the principal component analysis based on amino acid frequency with GRAVY score scale

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: plot_mca_codon_freq(handle: str, genetic_table_num: int, min_len_threshold: int = 200, n_components: int = 59, organism_name: str | None = None, save_image: bool = False, folder_path: str = '')

   Plots the principal component analysis based on codon frequency

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: plot_mca_rscu(handle: str, genetic_table_num: int, min_len_threshold: int = 200, n_components: int = 59, organism_name: str | None = None, save_image: bool = False, folder_path: str = '')

   Plots the principal component analysis based on codon RSCU value

   :param handle: Handle to the file, or the filename as a string
   :param genetic_table_num: Genetic table number for codon table
   :param min_len_threshold: Minimum length of nucleotide sequence to be considered as gene (optional)
   :param n_components: The number of principal components to compute (optional)
   :param organism_name: Name of organism (optional)
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: plot_phy_dnd(handle: str, title: str = 'Phylogenetic Tree', save_image: bool = False, folder_path: str = 'Report')

   Plots phylogenetic tree from dnd file
   :param handle: Handle to the dnd file
   :param title: Title of the plot
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


.. py:function:: plot_phy_nex(handle: str, title: str = 'Phylogenetic Tree', save_image: bool = False, folder_path: str = 'Report')

   Plots phylogenetic tree from dnd file
   :param handle: Handle to the dnd file
   :param title: Title of the plot
   :param save_image: Options for saving the image (optional)
   :param folder_path: Folder path where image should be saved (optional)


